apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "wordpress.fullname" . }}-mysql
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "wordpress.fullname" . }}-mysql
  replicas: 1
  selector:
    matchLabels:
      {{- include "wordpress.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mysql
  template:
    metadata:
      labels:
        {{- include "wordpress.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wordpress.fullname" . }}-mysql
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.auth.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wordpress.fullname" . }}-mysql
                  key: mysql-password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ include "wordpress.fullname" . }}-mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "{{ .Values.mysql.primary.persistence.accessMode }}" ]
        storageClassName: {{ .Values.global.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.mysql.primary.persistence.size }}
